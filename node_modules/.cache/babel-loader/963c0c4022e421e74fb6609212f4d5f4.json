{"ast":null,"code":"import { createElement } from 'react';\n\nvar getShapeProps = function getShapeProps(shapeInfo) {\n  var width = shapeInfo.width,\n      height = shapeInfo.height;\n  return function (type) {\n    var shapeOptions = {\n      rect: {\n        width: width,\n        height: height\n      },\n      circle: {\n        cx: Number(width) / 2,\n        cy: Number(height) / 2,\n        r: (Number(height) + Number(width)) / 4\n      }\n    };\n    return shapeOptions[type];\n  };\n};\n\nvar getSvgProps = function getSvgProps(shapeInfo) {\n  var width = shapeInfo.width,\n      height = shapeInfo.height;\n  return function (type) {\n    var svgProps = {\n      rect: {\n        width: width,\n        height: height\n      },\n      circle: {\n        width: width,\n        height: height\n      }\n    };\n    return svgProps[type];\n  };\n};\n\nvar PlaceholderLoading = function PlaceholderLoading(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      _ref$colorStart = _ref.colorStart,\n      colorStart = _ref$colorStart === void 0 ? '#f0f0f0' : _ref$colorStart,\n      _ref$colorEnd = _ref.colorEnd,\n      colorEnd = _ref$colorEnd === void 0 ? '#e0e0e0' : _ref$colorEnd,\n      shape = _ref.shape;\n  var ShapeElement = shape;\n  var shapeProps = getShapeProps({\n    width: width,\n    height: height\n  })(shape);\n  var svgProps = getSvgProps({\n    width: width,\n    height: height\n  })(shape);\n  return createElement(\"svg\", Object.assign({}, svgProps), createElement(ShapeElement, Object.assign({}, shapeProps, {\n    role: 'img',\n    \"data-testid\": \"shapeElement\",\n    fill: \"url(#linear-gradient)\"\n  })), createElement(\"defs\", null, createElement(\"linearGradient\", {\n    id: \"linear-gradient\",\n    x1: '0%',\n    y1: '0%',\n    x2: '100%',\n    y2: '0%'\n  }, createElement(\"stop\", {\n    offset: '0%',\n    stopColor: colorStart\n  }, createElement(\"animate\", {\n    attributeName: \"offset\",\n    values: \"-2; -2; 1\",\n    dur: \"2s\",\n    keyTimes: '0; 0.70; 1',\n    repeatCount: \"indefinite\"\n  })), createElement(\"stop\", {\n    offset: '50%',\n    stopColor: colorEnd\n  }, createElement(\"animate\", {\n    attributeName: \"offset\",\n    values: \"0; 0; 2\",\n    dur: \"2s\",\n    keyTimes: '0; 0.70; 1',\n    repeatCount: \"indefinite\"\n  })), createElement(\"stop\", {\n    offset: '100%',\n    stopColor: colorStart\n  }, createElement(\"animate\", {\n    attributeName: \"offset\",\n    values: \"0; 0; 3\",\n    dur: \"2s\",\n    keyTimes: '0; 0.90; 1',\n    repeatCount: \"indefinite\"\n  })))));\n};\n\nexport default PlaceholderLoading;","map":{"version":3,"mappings":";;AAEO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,SAAD;MACnBC,QAAkBD,UAAlBC;MAAOC,SAAWF,UAAXE;SACR,UAACC,IAAD;QACCC,YAAY,GAAG;MACnBC,IAAI,EAAE;QACJJ,KAAK,EAALA,KADI;QAEJC,MAAM,EAANA;MAFI,CADa;MAKnBI,MAAM,EAAE;QACNC,EAAE,EAAEC,MAAM,CAACP,KAAD,CAANO,GAAgB,CADd;QAENC,EAAE,EAAED,MAAM,CAACN,MAAD,CAANM,GAAiB,CAFf;QAGNE,CAAC,EAAE,CAACF,MAAM,CAACN,MAAD,CAANM,GAAiBA,MAAM,CAACP,KAAD,CAAxB,IAAmC;MAHhC;IALW;WAYdG,YAAY,CAACD,IAAD;EAbrB;AAFK;;AAmBP,IAAaQ,WAAW,GAAG,SAAdA,WAAc,CAACX,SAAD;MACjBC,QAAkBD,UAAlBC;MAAOC,SAAWF,UAAXE;SACR,UAACC,IAAD;QACCS,QAAQ,GAAG;MACfP,IAAI,EAAE;QACJJ,KAAK,EAALA,KADI;QAEJC,MAAM,EAANA;MAFI,CADS;MAKfI,MAAM,EAAE;QACNL,KAAK,EAAEA,KADD;QAENC,MAAM,EAAEA;MAFF;IALO;WAWVU,QAAQ,CAACT,IAAD;EAZjB;AAFK,CAAP;;ACjBA,IAAMU,kBAAkB,GAAG,SAArBA,kBAAqB;MACzBZ;MACAC;6BACAY;MAAAA,0CAAa,SAAbA,GAAaC;2BACbC;MAAAA,sCAAW,SAAXA,GAAWC;MACXC;MAEMC,YAAY,GAAGD;MACfE,UAAU,GAAGrB,aAAa,CAAC;IAAEE,KAAK,EAALA,KAAF;IAASC,MAAM,EAANA;EAAT,CAAD,CAAbH,CAAiCmB,KAAjCnB;MACba,QAAQ,GAAGD,WAAW,CAAC;IAAEV,KAAK,EAALA,KAAF;IAASC,MAAM,EAANA;EAAT,CAAD,CAAXS,CAA+BO,KAA/BP;SAGfU,uCAAST,QAAT,GACES,cAACF,YAAD,oBACMC,UADN,EACMA;IACJE,IAAI,EAAC,KADDF;mBAEQ,cAFRA;IAGJG,IAAI,EAAC;EAHDH,CADN,EADF,EAOEC,4BACEA;IACEG,EAAE,EAAC,iBADL;IAEEC,EAAE,EAAE,IAFN;IAGEC,EAAE,EAAE,IAHN;IAIEC,EAAE,EAAE,MAJN;IAKEC,EAAE,EAAE;EALN,GAOEP;IAAMQ,MAAM,EAAE,IAAd;IAAoBC,SAAS,EAAEhB;EAA/B,GACEO;IACEU,aAAa,EAAC,QADhB;IAEEC,MAAM,aAFR;IAGEC,GAAG,EAAC,IAHN;IAIEC,QAAQ,EAAE,YAJZ;IAKEC,WAAW,EAAC;EALd,EADF,CAPF,EAgBEd;IAAMQ,MAAM,EAAE,KAAd;IAAqBC,SAAS,EAAEd;EAAhC,GACEK;IACEU,aAAa,EAAC,QADhB;IAEEC,MAAM,WAFR;IAGEC,GAAG,EAAC,IAHN;IAIEC,QAAQ,EAAE,YAJZ;IAKEC,WAAW,EAAC;EALd,EADF,CAhBF,EAyBEd;IAAMQ,MAAM,EAAE,MAAd;IAAsBC,SAAS,EAAEhB;EAAjC,GACEO;IACEU,aAAa,EAAC,QADhB;IAEEC,MAAM,WAFR;IAGEC,GAAG,EAAC,IAHN;IAIEC,QAAQ,EAAE,YAJZ;IAKEC,WAAW,EAAC;EALd,EADF,CAzBF,CADF,CAPF;AAZJ","names":["getShapeProps","shapeInfo","width","height","type","shapeOptions","rect","circle","cx","Number","cy","r","getSvgProps","svgProps","PlaceholderLoading","colorStart","_ref$colorStart","colorEnd","_ref$colorEnd","shape","ShapeElement","shapeProps","React","role","fill","id","x1","y1","x2","y2","offset","stopColor","attributeName","values","dur","keyTimes","repeatCount"],"sources":["C:\\Users\\DELL\\Desktop\\EcommerceWebsite\\Project2\\backup1\\E-commerce-master\\node_modules\\react-placeholder-loading\\src\\utils.ts","C:\\Users\\DELL\\Desktop\\EcommerceWebsite\\Project2\\backup1\\E-commerce-master\\node_modules\\react-placeholder-loading\\src\\PlaceholderLoading.tsx"],"sourcesContent":["import { ShapeInfo, AvailableShapes } from 'types';\n\nexport const getShapeProps = (shapeInfo: ShapeInfo) => {\n  const { width, height } = shapeInfo;\n  return (type: AvailableShapes) => {\n    const shapeOptions = {\n      rect: {\n        width,\n        height,\n      },\n      circle: {\n        cx: Number(width) / 2,\n        cy: Number(height) / 2,\n        r: (Number(height) + Number(width)) / 4,\n      },\n    };\n\n    return shapeOptions[type];\n  };\n};\n\nexport const getSvgProps = (shapeInfo: ShapeInfo) => {\n  const { width, height } = shapeInfo;\n  return (type: AvailableShapes) => {\n    const svgProps = {\n      rect: {\n        width,\n        height,\n      },\n      circle: {\n        width: width,\n        height: height,\n      },\n    };\n\n    return svgProps[type];\n  };\n};\n","import * as React from 'react';\nimport { IPlaceholderLoadingProps } from './types';\nimport { getShapeProps, getSvgProps } from './utils';\n\nconst PlaceholderLoading = ({\n  width,\n  height,\n  colorStart = '#f0f0f0',\n  colorEnd = '#e0e0e0',\n  shape,\n}: IPlaceholderLoadingProps) => {\n  const ShapeElement = shape;\n  const shapeProps = getShapeProps({ width, height })(shape);\n  const svgProps = getSvgProps({ width, height })(shape);\n\n  return (\n    <svg {...svgProps}>\n      <ShapeElement\n        {...shapeProps}\n        role='img'\n        data-testid=\"shapeElement\"\n        fill=\"url(#linear-gradient)\"\n      />\n      <defs>\n        <linearGradient\n          id=\"linear-gradient\"\n          x1={'0%'}\n          y1={'0%'}\n          x2={'100%'}\n          y2={'0%'}\n        >\n          <stop offset={'0%'} stopColor={colorStart}>\n            <animate\n              attributeName=\"offset\"\n              values={`-2; -2; 1`}\n              dur=\"2s\"\n              keyTimes={'0; 0.70; 1'}\n              repeatCount=\"indefinite\"\n            />\n          </stop>\n          <stop offset={'50%'} stopColor={colorEnd}>\n            <animate\n              attributeName=\"offset\"\n              values={`0; 0; 2`}\n              dur=\"2s\"\n              keyTimes={'0; 0.70; 1'}\n              repeatCount=\"indefinite\"\n            />\n          </stop>\n          <stop offset={'100%'} stopColor={colorStart}>\n            <animate\n              attributeName=\"offset\"\n              values={`0; 0; 3`}\n              dur=\"2s\"\n              keyTimes={'0; 0.90; 1'}\n              repeatCount=\"indefinite\"\n            />\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n};\n\nexport default PlaceholderLoading;\n"]},"metadata":{},"sourceType":"module"}